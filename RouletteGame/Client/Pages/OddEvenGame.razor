@page "/oddeven"

<PageTitle>Odd / Even Game</PageTitle>

<h1>Odd / Even Game</h1>

<p>Instructions: Put your bet in the space below and choose a number</p>
<p>Good Luck</p>

@if (!IsComplete)
{
    <p><em>Loading...</em></p>
}
else
{
   <label>Your Balance is: @Balance</label>
   <br />
   <label>Put your bet</label>
   <input class="form-control" type="number" max=@Balance min=1 step=1 @bind-value="Bet"/>
   <br />
   <label>Is Odd?</label>
   <select class="form-select" @bind="IsOdd">
       <option>True</option>
       <option>False</option>
   </select>
   <br />
   <button class="btn btn-primary" @onclick="IsMyLuckyDay" disabled="@CanPlay">Play</button>

    @if (IHaveAnResult)
    {
        <Result GameResult="@ResultAlert" Message="@MessageAlert"></Result>
    }
}

@code {

    [Inject]
    public IOddEvenGame Game { get; set; }

    [Inject]
    public IWalletCustomer Wallet { get; set; }
    private bool IsComplete;

    public int Bet { get; set; }
    public string IsOdd { get; set; } = "True";
    public int Balance { get; set; }
    public bool CanPlay { get; set; }
    public bool IHaveAnResult { get; set; }
    public string ResultAlert { get; set; }
    public string MessageAlert { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await UpdateBalance();
        await CanIPlay();
        IsComplete = true;
    }

    async Task IsMyLuckyDay()
    {
        var result = await Game.IsMyLuckyDay(Convert.ToBoolean(IsOdd), Bet);
        if (result)
        {
            ResultAlert = "success";
            MessageAlert = "You Win";
        }
        else
        {
            ResultAlert = "danger";
            MessageAlert = "You Lose";
        }
        IHaveAnResult = true;
        await UpdateBalance();
        await InvokeAsync(StateHasChanged);
    }

    async Task CanIPlay()
    {
        CanPlay = !(Balance > 0 && Bet < Balance);
        await Task.FromResult(true);
    }

    async Task UpdateBalance()
    {
        Balance = await Wallet.GetAvailable();
    }
}
